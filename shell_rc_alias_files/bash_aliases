echo 'LOADED .bash_aliases'

## Ignore if already exists
if [ -f ~/.bash_tokens ]; then
. ~/.bash_tokens
fi

BREW_BIN="/usr/local/bin/brew"
if [ -f "/opt/homebrew/bin/brew" ]; then
    BREW_BIN="/opt/homebrew/bin/brew"
fi

if type "${BREW_BIN}" &> /dev/null; then
    export BREW_PREFIX="$("${BREW_BIN}" --prefix)"
    for bindir in "${BREW_PREFIX}/opt/"*"/libexec/gnubin"; do export PATH=$bindir:$PATH; done
    for bindir in "${BREW_PREFIX}/opt/"*"/bin"; do export PATH=$bindir:$PATH; done
    for mandir in "${BREW_PREFIX}/opt/"*"/libexec/gnuman"; do export MANPATH=$mandir:$MANPATH; done
    for mandir in "${BREW_PREFIX}/opt/"*"/share/man/man1"; do export MANPATH=$mandir:$MANPATH; done
fi
export TF_PLUGIN_CACHE_DIR=~/.terraform/plugin-cache

alias lf="ls -l | egrep -v '^d' | cut -d':' -f 2 | cut -d' ' -f 2"
alias ldir="ls -alphG --color=auto | egrep '^d' | cut -d':' -f 2 | cut -d' ' -f 2"

## gpg
GPG_TTY=$(tty)
export GPG_TTY

getmyip() {
  curl http://checkip.amazonaws.com/
}

showicloud() {
	find . -name '.*icloud' | perl -pe 's|(.*)/.(.*).icloud|$1/$2|s' | while read file; do echo "file - $file"; done
}

geticloud() {
	find . -name '.*icloud' | perl -pe 's|(.*)/.(.*).icloud|$1/$2|s' | while read file; do brctl download "$file"; done
}

# list the authors of a given release in Git
#
listauthors() {
  TAG=$1
  START_TAG=$(echo $TAG | cut -d '.' -f 1).0.0
  echo "FETCHING TAGS"
  echo $START_TAG

  git fetch
  echo "CLEANING UP....."
  rm combinedOutput.tmp
  git log --pretty=format:"%h,%an,%ae,%s" $START_TAG...$TAG #| sort -g > combinedOutput.tmp
}

giturl() {
  ## Returns git url e.g.
  ## git@github.com:smjmoj/linuxify.git
  local remote_origin_url
  remote_origin_url=$(git config remote.origin.url)
  echo  "${remote_origin_url}"
  echo  "${remote_origin_url}" | pbcopy
}

gitweb() {
  ## Returns git web HTTPS url e.g.
  ## https://github.com/smjmoj/linuxify
  local remote_origin_url
  remote_origin_url="https://$(git config remote.origin.url | cut -d : -f 1 | cut -d @ -f 2)/$(git config remote.origin.url | cut -d : -f 2 | cut -d . -f 1)"
  echo  "${remote_origin_url}"
  echo  "${remote_origin_url}" | pbcopy
}

alias tfenvuse='tfenv use $(cat versions.tf 2> /dev/null | grep required_version | cut -d "\"" -f 2 | cut -d " " -f 2) && tfenv pin'

## AWS related
## NOTE it2profile is an iTerm2 shell integration
## see https://iterm2.com/documentation-shell-integration.html
## also to switch to the named iTerm2 profile (Production) the profile needs creating
## and a helpful color scheme applied (Red Sands).
## Under Preferences > Advanced > Terminal
## Set "Prevent control sequences form changing current profile" to "no"
## For some reasone the profile name in the tab isn't set on the first call
export AWS_PROFILE=mojo-shared-services-cli
export AWS_VAULT_PROFILE=mojo-shared-services-cli

alias cli='echo "AWS_PROFILE -- ${AWS_PROFILE}"'
alias sharedcli="export AWS_PROFILE=mojo-shared-services-cli && cli && it2profile -s Default && it2profile -s Default"
alias prodcli="export AWS_PROFILE=mojo-production-cli && cli && it2profile -s Production && it2profile -s Production"
alias preprodcli="export AWS_PROFILE=mojo-pre-production-cli && cli && it2profile -s Pre-Production && it2profile -s Pre-Production"
alias devcli="export AWS_PROFILE=mojo-development-cli && cli && it2profile -s Development && it2profile -s Development"
alias clishare=sharedcli
alias cliprod=prodcli
alias clipre=preprodcli
alias clidev=devcli

alias pkiprodcli="export AWS_PROFILE=mojo-pki-production-cli && cli && it2profile -s Production && it2profile -s Production"
alias clipki=pkiprodcli

function aws_account_ids() {

cat <<EOF

683290208331 = shared-services
068084030754 = development
473630360727 = pre-production
037161842252 = production

EOF
}

alias awsid="aws sts get-caller-identity"
alias awsauth="/usr/local/bin/aws-vault exec mojo-shared-services --json"

alias cdmoj="${HOME}/gitrepos/moj/all_repos"
alias cdproj="${HOME}/gitrepos/moj/Our_Products"
alias cdNACS="${HOME}/gitrepos/moj/Our_Products/NACS"
alias cdDHCP="${HOME}/gitrepos/moj/Our_Products/DHCP"
alias cdDNS="${HOME}/gitrepos/moj/Our_Products/DNS"
alias cdshared="${HOME}/gitrepos/moj/all_repos/staff-device-shared-services-infrastructure"

export TF_PLUGIN_CACHE_DIR=~/.terraform/plugin-cache

alias ntab='open -a iTerm .' # open new iTerm tab in current directory
alias pwdc='pwd && pwd | pbcopy'
alias cdc='cd $(pbpaste)'

alias awsd='docker run --rm -ti -v ~/.aws:/root/.aws -v $(pwd):/aws --env-file <(aws-vault exec $AWS_PROFILE -- env | grep ^AWS_) amazon/aws-cli'

alias toold='docker run --rm -ti -v $(pwd):/data --env-file <(aws-vault exec $AWS_PROFILE -- env | grep ^AWS_) ministryofjustice/nvvs/terraforms:latest'
alias tooldgh='docker run --rm -ti -v $(pwd):/data --env-file <(aws-vault exec $AWS_PROFILE -- env | grep ^AWS_) ghcr.io/ministryofjustice/nvvs/terraforms:latest'
